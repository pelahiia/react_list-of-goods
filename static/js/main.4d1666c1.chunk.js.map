{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","a","b","length","ALPABET","localeCompare","reverse","App","state","NONE","sortAlphabetically","setState","sortByLength","getReverse","getReset","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAczB,OAZIC,IAAaJ,EAASO,QACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGvCP,IAAaJ,EAASY,SACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAG1CL,GACFC,EAAaQ,UAGRR,G,SA/BJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEf,SAAUJ,EAASY,WAPvC,EAUEQ,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUJ,EAASO,UAXvC,EAcEc,WAAa,WACX,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBAhBzB,EAoBEiB,SAAW,WACT,EAAKH,SAAS,CAAEd,YAAY,EAAOD,SAAUJ,EAASiB,QArB1D,4CAwBE,WACE,MAAiCM,KAAKP,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CACE,WAAYtB,IAAaJ,EAASY,UAEtCe,QAASJ,KAAKL,mBANhB,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYtB,IAAaJ,EAASO,SAEtCoB,QAASJ,KAAKH,aANhB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,YAAaH,KAAKP,MAAMX,aAE5BsB,QAASJ,KAAKF,WANhB,sBAWEjB,IAAaJ,EAASiB,MAAQZ,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,SAHhB,sBAUJ,6BACE,6BACGpB,EAAkBD,EAAiBsB,KAAKP,OAAOY,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA7EtC,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d1666c1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n type State = {\n   isReversed: boolean,\n   sortType: SortType,\n };\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  getReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  getReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              })}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              {\n                'is-light': !this.state.isReversed,\n              })}\n            onClick={this.getReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.getReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}